name: Deploy to GitHub Pages (Advanced)

# Advanced workflow with validation, testing, and notifications

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  # Validation job - runs on all events
  validate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate HTML structure
        run: |
          echo "Validating HTML structure..."

          # Check if index.html exists
          if [ ! -f "index.html" ]; then
            echo "ERROR: index.html not found"
            exit 1
          fi

          # Check for basic HTML structure
          if ! grep -q "<!DOCTYPE html>" index.html; then
            echo "WARNING: Missing DOCTYPE declaration"
          fi

          if ! grep -q "<html" index.html; then
            echo "ERROR: Missing <html> tag"
            exit 1
          fi

          echo "✓ HTML validation passed"

      - name: Check for placeholders
        run: |
          echo "Checking for Firebase placeholders..."

          PLACEHOLDERS=(
            "FIREBASE_API_KEY_PLACEHOLDER"
            "FIREBASE_AUTH_DOMAIN_PLACEHOLDER"
            "FIREBASE_PROJECT_ID_PLACEHOLDER"
            "FIREBASE_STORAGE_BUCKET_PLACEHOLDER"
            "FIREBASE_MESSAGING_SENDER_ID_PLACEHOLDER"
            "FIREBASE_APP_ID_PLACEHOLDER"
          )

          MISSING_PLACEHOLDERS=0
          for placeholder in "${PLACEHOLDERS[@]}"; do
            if ! grep -q "$placeholder" index.html; then
              echo "WARNING: $placeholder not found in HTML"
              MISSING_PLACEHOLDERS=$((MISSING_PLACEHOLDERS + 1))
            fi
          done

          if [ $MISSING_PLACEHOLDERS -eq 6 ]; then
            echo "INFO: No placeholders found - assuming hardcoded Firebase config"
          else
            echo "✓ Found ${#PLACEHOLDERS[@]} placeholders ready for injection"
          fi

      - name: Security scan
        run: |
          echo "Running basic security checks..."

          # Check for exposed secrets (common patterns)
          if grep -E "AIza[0-9A-Za-z-_]{35}" index.html | grep -v "PLACEHOLDER"; then
            echo "WARNING: Possible hardcoded Firebase API key detected"
          fi

          if grep -E "sk-[A-Za-z0-9]{48}" index.html; then
            echo "ERROR: Possible OpenAI API key exposed!"
            exit 1
          fi

          echo "✓ Security scan complete"

  # Build and deploy job - only runs on push to main or manual trigger
  deploy:
    runs-on: ubuntu-latest
    needs: validate
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create deployment directory
        run: |
          mkdir -p deploy
          cp index.html deploy/

      - name: Inject Firebase configuration
        working-directory: deploy
        run: |
          echo "Injecting Firebase configuration..."

          sed -i "s/FIREBASE_API_KEY_PLACEHOLDER/${{ secrets.FIREBASE_API_KEY }}/g" index.html
          sed -i "s/FIREBASE_AUTH_DOMAIN_PLACEHOLDER/${{ secrets.FIREBASE_AUTH_DOMAIN }}/g" index.html
          sed -i "s/FIREBASE_PROJECT_ID_PLACEHOLDER/${{ secrets.FIREBASE_PROJECT_ID }}/g" index.html
          sed -i "s/FIREBASE_STORAGE_BUCKET_PLACEHOLDER/${{ secrets.FIREBASE_STORAGE_BUCKET }}/g" index.html
          sed -i "s/FIREBASE_MESSAGING_SENDER_ID_PLACEHOLDER/${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}/g" index.html
          sed -i "s/FIREBASE_APP_ID_PLACEHOLDER/${{ secrets.FIREBASE_APP_ID }}/g" index.html

          echo "✓ Configuration injected"

      - name: Verify injection
        working-directory: deploy
        run: |
          echo "Verifying Firebase config injection..."

          if grep -q "PLACEHOLDER" index.html; then
            echo "ERROR: Placeholders still present after injection"
            grep "PLACEHOLDER" index.html
            exit 1
          fi

          # Verify at least one Firebase config value is present
          if ! grep -q "${{ secrets.FIREBASE_PROJECT_ID }}" index.html; then
            echo "ERROR: Firebase Project ID not found in HTML after injection"
            exit 1
          fi

          echo "✓ Injection verified successfully"

      - name: Add deployment metadata
        working-directory: deploy
        run: |
          # Add HTML comment with deployment info
          TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          COMMIT_SHA="${{ github.sha }}"

          sed -i "s|</head>|    <!-- Deployed: $TIMESTAMP -->\n    <!-- Commit: $COMMIT_SHA -->\n</head>|" index.html

          echo "✓ Deployment metadata added"

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./deploy
          publish_branch: gh-pages
          force_orphan: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: |
            Deploy: ${{ github.event.head_commit.message }}

            Commit: ${{ github.sha }}
            Actor: ${{ github.actor }}
            Workflow: ${{ github.workflow }}

      - name: Create deployment summary
        if: success()
        run: |
          echo "## Deployment Successful! 🚀" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Site URL:** https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Deployed by:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "1. Wait 1-2 minutes for GitHub Pages to update" >> $GITHUB_STEP_SUMMARY
          echo "2. Visit your site and verify Firebase functionality" >> $GITHUB_STEP_SUMMARY
          echo "3. Check browser console for any errors" >> $GITHUB_STEP_SUMMARY

      - name: Notify on failure
        if: failure()
        run: |
          echo "## Deployment Failed ❌" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Troubleshooting" >> $GITHUB_STEP_SUMMARY
          echo "1. Check workflow logs for error details" >> $GITHUB_STEP_SUMMARY
          echo "2. Verify all GitHub Secrets are configured correctly" >> $GITHUB_STEP_SUMMARY
          echo "3. Ensure index.html contains proper placeholders" >> $GITHUB_STEP_SUMMARY
