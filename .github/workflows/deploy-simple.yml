name: Deploy to GitHub Pages (Simple)

# Trigger on push to main branch or manual workflow dispatch
on:
  push:
    branches: [main]
  workflow_dispatch:

# Required permissions for deployment
permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Inject Firebase configuration using sed
      - name: Inject Firebase configuration
        run: |
          echo "Injecting Firebase configuration into index.html..."

          # Replace placeholders with actual values from GitHub Secrets
          sed -i "s/FIREBASE_API_KEY_PLACEHOLDER/${{ secrets.FIREBASE_API_KEY }}/g" index.html
          sed -i "s/FIREBASE_AUTH_DOMAIN_PLACEHOLDER/${{ secrets.FIREBASE_AUTH_DOMAIN }}/g" index.html
          sed -i "s/FIREBASE_PROJECT_ID_PLACEHOLDER/${{ secrets.FIREBASE_PROJECT_ID }}/g" index.html
          sed -i "s/FIREBASE_STORAGE_BUCKET_PLACEHOLDER/${{ secrets.FIREBASE_STORAGE_BUCKET }}/g" index.html
          sed -i "s/FIREBASE_MESSAGING_SENDER_ID_PLACEHOLDER/${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}/g" index.html
          sed -i "s/FIREBASE_APP_ID_PLACEHOLDER/${{ secrets.FIREBASE_APP_ID }}/g" index.html

          echo "Firebase configuration injected successfully"

      # Step 3: Verify injection worked (fail if placeholders still exist)
      - name: Verify configuration injection
        run: |
          echo "Verifying Firebase config was injected..."

          if grep -q "FIREBASE_API_KEY_PLACEHOLDER" index.html; then
            echo "ERROR: FIREBASE_API_KEY_PLACEHOLDER still present in index.html"
            exit 1
          fi

          if grep -q "${{ secrets.FIREBASE_PROJECT_ID }}" index.html; then
            echo "✓ Configuration verified: Firebase Project ID found in HTML"
          else
            echo "WARNING: Could not verify Firebase Project ID in HTML"
          fi

          echo "✓ Verification complete"

      # Step 4: Deploy to GitHub Pages using peaceiris action
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./
          publish_branch: gh-pages
          force_orphan: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: 'Deploy: ${{ github.event.head_commit.message }}'

      # Step 5: Output deployment URL
      - name: Deployment complete
        run: |
          echo "=========================================="
          echo "Deployment successful!"
          echo "Site URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
          echo "=========================================="
